//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FramasVietNam.Models.BarcodeScanner
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BarcodeScannerEntities : DbContext
    {
        public BarcodeScannerEntities()
            : base("name=BarcodeScannerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PackingBarcodeQR_VNL> PackingBarcodeQR_VNL { get; set; }
        public virtual DbSet<PackingBarcodeQR_VNT> PackingBarcodeQR_VNT { get; set; }
        public virtual DbSet<vWarehouseVNL> vWarehouseVNLs { get; set; }
        public virtual DbSet<vWarehouseVNT> vWarehouseVNTs { get; set; }
    
        public virtual ObjectResult<sp_ExportInventoryVNL_GetChild_Result> sp_ExportInventoryVNL_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportInventoryVNL_GetChild_Result>("sp_ExportInventoryVNL_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_ExportInventoryVNL_GetParent_Result> sp_ExportInventoryVNL_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportInventoryVNL_GetParent_Result>("sp_ExportInventoryVNL_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_ExportInventoryVNL_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportInventoryVNL_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual ObjectResult<sp_ExportInventoryVNT_GetChild_Result> sp_ExportInventoryVNT_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportInventoryVNT_GetChild_Result>("sp_ExportInventoryVNT_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_ExportInventoryVNT_GetParent_Result> sp_ExportInventoryVNT_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ExportInventoryVNT_GetParent_Result>("sp_ExportInventoryVNT_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_ExportInventoryVNT_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExportInventoryVNT_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual ObjectResult<sp_ImportInventoryVNL_GetChild_Result> sp_ImportInventoryVNL_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImportInventoryVNL_GetChild_Result>("sp_ImportInventoryVNL_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_ImportInventoryVNL_GetParent_Result> sp_ImportInventoryVNL_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImportInventoryVNL_GetParent_Result>("sp_ImportInventoryVNL_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_ImportInventoryVNL_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImportInventoryVNL_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual ObjectResult<sp_ImportInventoryVNT_GetChild_Result> sp_ImportInventoryVNT_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImportInventoryVNT_GetChild_Result>("sp_ImportInventoryVNT_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_ImportInventoryVNT_GetParent_Result> sp_ImportInventoryVNT_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ImportInventoryVNT_GetParent_Result>("sp_ImportInventoryVNT_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_ImportInventoryVNT_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ImportInventoryVNT_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual ObjectResult<sp_KeyPostVNL_Get_Result> sp_KeyPostVNL_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_KeyPostVNL_Get_Result>("sp_KeyPostVNL_Get");
        }
    
        public virtual ObjectResult<sp_KeyPostVNT_Get_Result> sp_KeyPostVNT_Get()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_KeyPostVNT_Get_Result>("sp_KeyPostVNT_Get");
        }
    
        public virtual ObjectResult<sp_TransferInventoryVNL_GetChild_Result> sp_TransferInventoryVNL_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TransferInventoryVNL_GetChild_Result>("sp_TransferInventoryVNL_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_TransferInventoryVNL_GetParent_Result> sp_TransferInventoryVNL_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TransferInventoryVNL_GetParent_Result>("sp_TransferInventoryVNL_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_TransferInventoryVNL_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TransferInventoryVNL_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual ObjectResult<sp_TransferInventoryVNT_GetChild_Result> sp_TransferInventoryVNT_GetChild(string oCNo)
        {
            var oCNoParameter = oCNo != null ?
                new ObjectParameter("OCNo", oCNo) :
                new ObjectParameter("OCNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TransferInventoryVNT_GetChild_Result>("sp_TransferInventoryVNT_GetChild", oCNoParameter);
        }
    
        public virtual ObjectResult<sp_TransferInventoryVNT_GetParent_Result> sp_TransferInventoryVNT_GetParent(string dateSearch, string oCDN)
        {
            var dateSearchParameter = dateSearch != null ?
                new ObjectParameter("DateSearch", dateSearch) :
                new ObjectParameter("DateSearch", typeof(string));
    
            var oCDNParameter = oCDN != null ?
                new ObjectParameter("OCDN", oCDN) :
                new ObjectParameter("OCDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TransferInventoryVNT_GetParent_Result>("sp_TransferInventoryVNT_GetParent", dateSearchParameter, oCDNParameter);
        }
    
        public virtual int sp_TransferInventoryVNT_Ins(string strID, string postType, string warehouseFrom, string keyFrom, string warehouseTo, string keyTo, Nullable<System.DateTime> dateImport, string user)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var postTypeParameter = postType != null ?
                new ObjectParameter("PostType", postType) :
                new ObjectParameter("PostType", typeof(string));
    
            var warehouseFromParameter = warehouseFrom != null ?
                new ObjectParameter("WarehouseFrom", warehouseFrom) :
                new ObjectParameter("WarehouseFrom", typeof(string));
    
            var keyFromParameter = keyFrom != null ?
                new ObjectParameter("KeyFrom", keyFrom) :
                new ObjectParameter("KeyFrom", typeof(string));
    
            var warehouseToParameter = warehouseTo != null ?
                new ObjectParameter("WarehouseTo", warehouseTo) :
                new ObjectParameter("WarehouseTo", typeof(string));
    
            var keyToParameter = keyTo != null ?
                new ObjectParameter("KeyTo", keyTo) :
                new ObjectParameter("KeyTo", typeof(string));
    
            var dateImportParameter = dateImport.HasValue ?
                new ObjectParameter("DateImport", dateImport) :
                new ObjectParameter("DateImport", typeof(System.DateTime));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_TransferInventoryVNT_Ins", strIDParameter, postTypeParameter, warehouseFromParameter, keyFromParameter, warehouseToParameter, keyToParameter, dateImportParameter, userParameter);
        }
    
        public virtual int sp_ActionLog(string actionName, string controllerName, string method, string content, string detail, string userName, Nullable<System.DateTime> date)
        {
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var controllerNameParameter = controllerName != null ?
                new ObjectParameter("ControllerName", controllerName) :
                new ObjectParameter("ControllerName", typeof(string));
    
            var methodParameter = method != null ?
                new ObjectParameter("Method", method) :
                new ObjectParameter("Method", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActionLog", actionNameParameter, controllerNameParameter, methodParameter, contentParameter, detailParameter, userNameParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_CheckBarcodeScanner(string strID, string action)
        {
            var strIDParameter = strID != null ?
                new ObjectParameter("strID", strID) :
                new ObjectParameter("strID", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_CheckBarcodeScanner", strIDParameter, actionParameter);
        }
    }
}
